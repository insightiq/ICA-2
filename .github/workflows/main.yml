name: CI/CD 

on: [push, pull_request]

jobs:
  python_unit_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Replace with your requirements file if needed

    - name: Run unit tests and generate text report
      run: |
        python -m unittest discover -s ./ -p 'test_app.py' 2>&1 | tee test-report.txt

    - name: Archive test report
      uses: actions/upload-artifact@v2
      with:
        name: test-report
        path: test-report.txt  # Store the text report as an artifact


  Linux-self-hosted:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Replace with your requirements file if needed

      - name: Run unit tests and generate text report
        run: |
          python -m unittest discover -s ./ -p 'test_app.py' 2>&1 | tee test-report.txt

      - name: Archive test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report1
          path: test-report1.txt  # Store the text report as an artifact


  Windows-self-hosted:
    runs-on: Windows  

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Replace with your requirements file if needed

      - name: Run unit tests and generate text report
        run: |
          & "${env:pythonLocation}\python.exe" -m unittest discover -s ./ -p 'test_app.py' 2>&1 | tee test-report.txt
        shell: cmd
        env:
          pythonLocation: C:\Users\Administrator\actions-runner\_work\_tool\Python\3.12.0\x64


      - name: Archive test report
        uses: actions/upload-artifact@v2
        with:
          name: test-report2
          path: test-report2.txt  # Store the text report as an artifact 

  build_and_push_docker_image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: actions/setup-node@v4
      with:
        node-version: '14'

    - name: Log in to GitHub Packages
      run: docker login docker.pkg.github.com -u insightiq --password-stdin < <(echo ${{ secrets.GITHUB_TOKEN }})

    - name: Build and push Docker image
      env:
        VERSION: ${{ github.sha }}
      run: |
        docker build -t docker.pkg.github.com/${{ github.repository }}/insightiq:${{ env.VERSION }} .
        docker push docker.pkg.github.com/${{ github.repository }}/insightiq:${{ env.VERSION }}

